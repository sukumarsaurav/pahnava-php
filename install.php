<?php
/**
 * Installation Script
 * Sets up the database and initial configuration
 * 
 * @security This file should be deleted after installation
 */

// Prevent access if already installed
if (file_exists('config/.installed')) {
    die('Application is already installed. Delete config/.installed to reinstall.');
}

$errors = [];
$success = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get database configuration
    $dbHost = $_POST['db_host'] ?? 'localhost';
    $dbName = $_POST['db_name'] ?? 'pahnava_ecommerce';
    $dbUser = $_POST['db_user'] ?? 'root';
    $dbPass = $_POST['db_pass'] ?? '';
    
    // Admin user configuration
    $adminUsername = $_POST['admin_username'] ?? 'admin';
    $adminEmail = $_POST['admin_email'] ?? 'admin@pahnava.com';
    $adminPassword = $_POST['admin_password'] ?? '';
    $adminFirstName = $_POST['admin_first_name'] ?? 'Admin';
    $adminLastName = $_POST['admin_last_name'] ?? 'User';
    
    // Validate input
    if (empty($adminPassword) || strlen($adminPassword) < 8) {
        $errors[] = 'Admin password must be at least 8 characters long';
    }
    
    if (!filter_var($adminEmail, FILTER_VALIDATE_EMAIL)) {
        $errors[] = 'Please enter a valid admin email address';
    }
    
    if (empty($errors)) {
        try {
            // Create database connection
            $dsn = "mysql:host={$dbHost};charset=utf8mb4";
            $pdo = new PDO($dsn, $dbUser, $dbPass, [
                PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION
            ]);
            
            // Create database if it doesn't exist
            $pdo->exec("CREATE DATABASE IF NOT EXISTS `{$dbName}` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci");
            $pdo->exec("USE `{$dbName}`");
            
            // Read and execute schema
            $schema = file_get_contents('database/schema.sql');
            
            // Remove the database creation and use statements from schema
            $schema = preg_replace('/CREATE DATABASE.*?;/', '', $schema);
            $schema = preg_replace('/USE.*?;/', '', $schema);
            
            // Execute schema
            $pdo->exec($schema);
            
            // Hash admin password
            $hashedPassword = password_hash($adminPassword, PASSWORD_ARGON2ID, [
                'memory_cost' => 65536,
                'time_cost' => 4,
                'threads' => 3
            ]);
            
            // Update admin user
            $stmt = $pdo->prepare("UPDATE admin_users SET 
                                   username = ?, email = ?, password = ?, 
                                   first_name = ?, last_name = ? 
                                   WHERE id = 1");
            $stmt->execute([$adminUsername, $adminEmail, $hashedPassword, $adminFirstName, $adminLastName]);
            
            // Update database configuration file
            $configContent = "<?php
/**
 * Database Configuration
 * Generated by installation script
 */

class Database {
    private static \$instance = null;
    private \$connection;
    
    // Database configuration
    private \$host = '{$dbHost}';
    private \$username = '{$dbUser}';
    private \$password = '{$dbPass}';
    private \$database = '{$dbName}';
    private \$charset = 'utf8mb4';
    
    private function __construct() {
        \$this->connect();
    }
    
    public static function getInstance() {
        if (self::\$instance === null) {
            self::\$instance = new self();
        }
        return self::\$instance;
    }
    
    private function connect() {
        try {
            \$dsn = \"mysql:host={\$this->host};dbname={\$this->database};charset={\$this->charset}\";
            
            \$options = [
                PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
                PDO::ATTR_EMULATE_PREPARES => false,
                PDO::MYSQL_ATTR_INIT_COMMAND => \"SET NAMES {\$this->charset}\",
                PDO::ATTR_PERSISTENT => false
            ];
            
            \$this->connection = new PDO(\$dsn, \$this->username, \$this->password, \$options);
            
        } catch (PDOException \$e) {
            error_log(\"Database connection failed: \" . \$e->getMessage());
            die(\"Database connection failed. Please try again later.\");
        }
    }
    
    public function getConnection() {
        return \$this->connection;
    }
    
    public function execute(\$query, \$params = []) {
        try {
            \$stmt = \$this->connection->prepare(\$query);
            \$stmt->execute(\$params);
            return \$stmt;
        } catch (PDOException \$e) {
            error_log(\"Query execution failed: \" . \$e->getMessage());
            throw new Exception(\"Database operation failed\");
        }
    }
    
    public function fetchRow(\$query, \$params = []) {
        \$stmt = \$this->execute(\$query, \$params);
        return \$stmt->fetch();
    }
    
    public function fetchAll(\$query, \$params = []) {
        \$stmt = \$this->execute(\$query, \$params);
        return \$stmt->fetchAll();
    }
    
    public function lastInsertId() {
        return \$this->connection->lastInsertId();
    }
    
    public function beginTransaction() {
        return \$this->connection->beginTransaction();
    }
    
    public function commit() {
        return \$this->connection->commit();
    }
    
    public function rollback() {
        return \$this->connection->rollback();
    }
    
    public function tableExists(\$tableName) {
        \$query = \"SHOW TABLES LIKE ?\";
        \$result = \$this->fetchRow(\$query, [\$tableName]);
        return !empty(\$result);
    }
}

// Initialize database connection
try {
    \$db = Database::getInstance();
} catch (Exception \$e) {
    error_log(\"Database initialization failed: \" . \$e->getMessage());
    die(\"System temporarily unavailable. Please try again later.\");
}
?>";
            
            file_put_contents('config/database.php', $configContent);
            
            // Create directories
            $directories = [
                'uploads',
                'uploads/products',
                'uploads/categories',
                'uploads/users',
                'config'
            ];
            
            foreach ($directories as $dir) {
                if (!is_dir($dir)) {
                    mkdir($dir, 0755, true);
                }
            }
            
            // Create .htaccess for uploads directory
            $htaccessContent = "Options -Indexes\n<Files ~ \"\\.(php|phtml|php3|php4|php5|pl|py|jsp|asp|sh|cgi)\$\">\n    deny from all\n</Files>";
            file_put_contents('uploads/.htaccess', $htaccessContent);
            
            // Mark as installed
            file_put_contents('config/.installed', date('Y-m-d H:i:s'));
            
            $success = 'Installation completed successfully! You can now access your ecommerce website.';
            
        } catch (Exception $e) {
            $errors[] = 'Installation failed: ' . $e->getMessage();
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pahnava Installation</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
        }
        .install-card {
            background: white;
            border-radius: 1rem;
            box-shadow: 0 1rem 3rem rgba(0,0,0,0.175);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="install-card">
                    <div class="card-body p-5">
                        <div class="text-center mb-4">
                            <h1 class="h2 text-primary fw-bold">Pahnava</h1>
                            <p class="text-muted">Ecommerce Platform Installation</p>
                        </div>
                        
                        <?php if (!empty($errors)): ?>
                            <div class="alert alert-danger">
                                <ul class="mb-0">
                                    <?php foreach ($errors as $error): ?>
                                        <li><?php echo htmlspecialchars($error); ?></li>
                                    <?php endforeach; ?>
                                </ul>
                            </div>
                        <?php endif; ?>
                        
                        <?php if (!empty($success)): ?>
                            <div class="alert alert-success">
                                <?php echo htmlspecialchars($success); ?>
                                <div class="mt-3">
                                    <a href="index.php" class="btn btn-primary">Go to Website</a>
                                    <a href="admin/" class="btn btn-outline-primary ms-2">Admin Panel</a>
                                </div>
                            </div>
                        <?php else: ?>
                            <form method="POST">
                                <h5 class="mb-3">Database Configuration</h5>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Database Host</label>
                                        <input type="text" class="form-control" name="db_host" value="localhost" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Database Name</label>
                                        <input type="text" class="form-control" name="db_name" value="pahnava_ecommerce" required>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Database Username</label>
                                        <input type="text" class="form-control" name="db_user" value="root" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Database Password</label>
                                        <input type="password" class="form-control" name="db_pass">
                                    </div>
                                </div>
                                
                                <hr class="my-4">
                                
                                <h5 class="mb-3">Admin Account</h5>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">First Name</label>
                                        <input type="text" class="form-control" name="admin_first_name" value="Admin" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label class="form-label">Last Name</label>
                                        <input type="text" class="form-control" name="admin_last_name" value="User" required>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Username</label>
                                    <input type="text" class="form-control" name="admin_username" value="admin" required>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <input type="email" class="form-control" name="admin_email" value="admin@pahnava.com" required>
                                </div>
                                
                                <div class="mb-4">
                                    <label class="form-label">Password</label>
                                    <input type="password" class="form-control" name="admin_password" required minlength="8">
                                    <div class="form-text">Minimum 8 characters</div>
                                </div>
                                
                                <button type="submit" class="btn btn-primary w-100">Install Pahnava</button>
                            </form>
                        <?php endif; ?>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
